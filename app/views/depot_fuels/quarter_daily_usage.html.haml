.navbar
  %ul.nav
    %li= link_to_function(fa_icon("print", text: (t 'actions.print')), "javascript:print()")

- provide(:title, 'DepotFuel')
- model_class = DepotFuel
.page-header
  %h1= t 'menu.fuel_type_per_quarter', :default => model_class.model_name.human
  
%h2
  =(t 'unit_fuels.first_quarter')+" "+Date.today.year.to_s

//sample-working one  
/ =t 'report.average_diesel_usage'
/ %table.table.table-bordered
/   %thead
/     %tr
/       %th Depot
/       %th=t 'depot_fuels.bal_start_and_supplied'
/       %th=t 'depot_fuels.issued_received'
/       %th=t 'depot_fuels.current_stock'
/       %th=t 'depot_fuels.usage_average'
/ 
/   %tbody
/     - @daily_usage_quarter.each do |depot, depot_fuels|
/       - depot_fuel_ids=depot_fuels.map(&:id)
/       - depot_fuel_last=depot_fuels.last.id
/       - diesel_tank_ids=FuelTank.where(fuel_type_id: 2).where(unit_id: depot).pluck(:id)
/       %tr
/         %td= check_kin {Unit.find(depot).name}
/         %td
/           - if @last_prev_depot_fuel
/             - bal_start= @last_prev_depot_fuel.fuel_balances.where(fuel_tank_id: diesel_tank_ids).first.current
/           = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
/         %td=usage= FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
/         %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: diesel_tank_ids).sum(:current)
/         %td=number_with_precision(usage/90, precision: 2)
/ 
/ =t 'report.average_petrol_usage'
/ %table.table.table-bordered
/   %thead
/     %tr
/       %th Depot
/       %th=t 'depot_fuels.bal_start_and_supplied'
/       %th=t 'depot_fuels.issued_received'
/       %th=t 'depot_fuels.current_stock'
/       %th=t 'depot_fuels.usage_average'
/ 
/   %tbody
/     - @daily_usage_quarter.each do |depot, depot_fuels|
/       - depot_fuel_ids=depot_fuels.map(&:id)
/       - depot_fuel_last=depot_fuels.last.id
/       - petrol_tank_ids=FuelTank.where(fuel_type_id: 1).where(unit_id: depot).pluck(:id)
/       %tr
/         %td= check_kin {Unit.find(depot).name}
/         %td
/           - if @last_prev_depot_fuel
/             - bal_start= @last_prev_depot_fuel.fuel_balances.where(fuel_tank_id: petrol_tank_ids).first.current
/           = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
/         %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
/         %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: petrol_tank_ids).sum(:current)
/         %td=number_with_precision(usage/90, precision: 2) 
/         
/ =t 'report.average_avtur_usage'
/ %table.table.table-bordered
/   %thead
/     %tr
/       %th Depot
/       %th=t 'depot_fuels.bal_start_and_supplied'
/       %th=t 'depot_fuels.issued_received'
/       %th=t 'depot_fuels.current_stock'
/       %th=t 'depot_fuels.usage_average'
/ 
/   %tbody
/     - @daily_usage_quarter.each do |depot, depot_fuels|
/       - depot_fuel_ids=depot_fuels.map(&:id)
/       - depot_fuel_last=depot_fuels.last.id
/       - avtur_tank_ids=FuelTank.where(fuel_type_id: 5).where(unit_id: depot).pluck(:id)
/       %tr
/         %td= check_kin {Unit.find(depot).name}
/         %td
/           - if @last_prev_depot_fuel
/             - bal_start= @last_prev_depot_fuel.fuel_balances.where(fuel_tank_id: avtur_tank_ids).first.current
/           = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
/         %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
/         %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avtur_tank_ids).sum(:current)
/         %td=number_with_precision(usage/90, precision: 2) 
/ 
/ =t 'report.average_avcat_usage'
/ %table.table.table-bordered
/   %thead
/     %tr
/       %th Depot
/       %th=t 'depot_fuels.bal_start_and_supplied'
/       %th=t 'depot_fuels.issued_received'
/       %th=t 'depot_fuels.current_stock'
/       %th=t 'depot_fuels.usage_average'
/ 
/   %tbody
/     - @daily_usage_quarter.each do |depot, depot_fuels|
/       - depot_fuel_ids=depot_fuels.map(&:id)
/       - depot_fuel_last=depot_fuels.last.id
/       - avcat_tank_ids=FuelTank.where(fuel_type_id: 12).where(unit_id: depot).pluck(:id)
/       - if avcat_tank_ids.count > 0
/         %tr
/           %td= check_kin {Unit.find(depot).name}
/           %td
/             - if @last_prev_depot_fuel
/               - bal_start= @last_prev_depot_fuel.fuel_balances.where(fuel_tank_id: avcat_tank_ids).first.current 
/             = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
/           %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
/           %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avcat_tank_ids).sum(:current)
/           %td=number_with_precision(usage/90, precision: 2) 
          
/1st quarter 
  
=t 'report.average_diesel_usage'
%table.table.table-bordered
  %thead
    %tr
      %th Depot
      %th=t 'depot_fuels.bal_start_and_supplied'
      %th=t 'depot_fuels.issued_received'
      %th=t 'depot_fuels.current_stock'
      %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter1.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - diesel_tank_ids=FuelTank.where(fuel_type_id: 2).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel1
            - bal_start= @last_prev_depot_fuel1.fuel_balances.where(fuel_tank_id: diesel_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td=usage= FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: diesel_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2)

=t 'report.average_petrol_usage'
%table.table.table-bordered
  %thead
    %tr
      %th Depot
      %th=t 'depot_fuels.bal_start_and_supplied'
      %th=t 'depot_fuels.issued_received'
      %th=t 'depot_fuels.current_stock'
      %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter1.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - petrol_tank_ids=FuelTank.where(fuel_type_id: 1).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel1
            - bal_start= @last_prev_depot_fuel1.fuel_balances.where(fuel_tank_id: petrol_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: petrol_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 
        
=t 'report.average_avtur_usage'
%table.table.table-bordered
  %thead
    %tr
      %th Depot
      %th=t 'depot_fuels.bal_start_and_supplied'
      %th=t 'depot_fuels.issued_received'
      %th=t 'depot_fuels.current_stock'
      %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter1.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - avtur_tank_ids=FuelTank.where(fuel_type_id: 5).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel1
            - bal_start= @last_prev_depot_fuel1.fuel_balances.where(fuel_tank_id: avtur_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avtur_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 

=t 'report.average_avcat_usage'
%table.table.table-bordered
  %thead
    %tr
      %th Depot
      %th=t 'depot_fuels.bal_start_and_supplied'
      %th=t 'depot_fuels.issued_received'
      %th=t 'depot_fuels.current_stock'
      %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter1.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - avcat_tank_ids=FuelTank.where(fuel_type_id: 12).where(unit_id: depot).pluck(:id)
      - if avcat_tank_ids.count > 0
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel1
              - bal_start= @last_prev_depot_fuel1.fuel_balances.where(fuel_tank_id: avcat_tank_ids).first.current 
            = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
          %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
          %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avcat_tank_ids).sum(:current)
          %td=number_with_precision(usage/90, precision: 2) 
          
/2nd quarter 
- if @daily_usage_quarter2.count > 0
  %h2
    =(t 'unit_fuels.first_quarter')+" "+Date.today.year.to_s
  
  =t 'report.average_diesel_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter2.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - diesel_tank_ids=FuelTank.where(fuel_type_id: 2).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel2
              - bal_start= @last_prev_depot_fuel2.fuel_balances.where(fuel_tank_id: diesel_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td=usage= FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: diesel_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2)

  =t 'report.average_petrol_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter2.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - petrol_tank_ids=FuelTank.where(fuel_type_id: 1).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel2
            - bal_start= @last_prev_depot_fuel2.fuel_balances.where(fuel_tank_id: petrol_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: petrol_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 
        
  =t 'report.average_avtur_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter2.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avtur_tank_ids=FuelTank.where(fuel_type_id: 5).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel2
              - bal_start= @last_prev_depot_fuel2.fuel_balances.where(fuel_tank_id: avtur_tank_ids).first.current
            = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avtur_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 

  =t 'report.average_avcat_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter2.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avcat_tank_ids=FuelTank.where(fuel_type_id: 12).where(unit_id: depot).pluck(:id)
        - if avcat_tank_ids.count > 0
          %tr
            %td= check_kin {Unit.find(depot).name}
            %td
              - if @last_prev_depot_fuel2
                - bal_start= @last_prev_depot_fuel2.fuel_balances.where(fuel_tank_id: avcat_tank_ids).first.current 
              = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avcat_tank_ids).sum(:current)
            %td=number_with_precision(usage/90, precision: 2) 
       
/3rd quarter 
- if @daily_usage_quarter3.count > 0
  %h2
    =(t 'unit_fuels.first_quarter')+" "+Date.today.year.to_s
  
  =t 'report.average_diesel_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter3.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - diesel_tank_ids=FuelTank.where(fuel_type_id: 2).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel3
              - bal_start= @last_prev_depot_fuel3.fuel_balances.where(fuel_tank_id: diesel_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td=usage= FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: diesel_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2)

  =t 'report.average_petrol_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter3.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - petrol_tank_ids=FuelTank.where(fuel_type_id: 1).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel3
            - bal_start= @last_prev_depot_fuel3.fuel_balances.where(fuel_tank_id: petrol_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: petrol_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 
        
  =t 'report.average_avtur_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter3.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avtur_tank_ids=FuelTank.where(fuel_type_id: 5).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel3
              - bal_start= @last_prev_depot_fuel3.fuel_balances.where(fuel_tank_id: avtur_tank_ids).first.current
            = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avtur_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 

  =t 'report.average_avcat_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter3.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avcat_tank_ids=FuelTank.where(fuel_type_id: 12).where(unit_id: depot).pluck(:id)
        - if avcat_tank_ids.count > 0
          %tr
            %td= check_kin {Unit.find(depot).name}
            %td
              - if @last_prev_depot_fuel3
                - bal_start= @last_prev_depot_fuel3.fuel_balances.where(fuel_tank_id: avcat_tank_ids).first.current 
              = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avcat_tank_ids).sum(:current)
            %td=number_with_precision(usage/90, precision: 2) 
            
/4th quarter 
- if @daily_usage_quarter4 && @daily_usage_quarter4.count > 0
  %h2
    =(t 'unit_fuels.first_quarter')+" "+Date.today.year.to_s
  
  =t 'report.average_diesel_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter4.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - diesel_tank_ids=FuelTank.where(fuel_type_id: 2).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel4
              - bal_start= @last_prev_depot_fuel4.fuel_balances.where(fuel_tank_id: diesel_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td=usage= FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 2).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: diesel_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2)

  =t 'report.average_petrol_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

  %tbody
    - @daily_usage_quarter4.each do |depot, depot_fuels|
      - depot_fuel_ids=depot_fuels.map(&:id)
      - depot_fuel_last=depot_fuels.last.id
      - petrol_tank_ids=FuelTank.where(fuel_type_id: 1).where(unit_id: depot).pluck(:id)
      %tr
        %td= check_kin {Unit.find(depot).name}
        %td
          - if @last_prev_depot_fuel4
            - bal_start= @last_prev_depot_fuel4.fuel_balances.where(fuel_tank_id: petrol_tank_ids).first.current
          = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 1).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: petrol_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 
        
  =t 'report.average_avtur_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter4.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avtur_tank_ids=FuelTank.where(fuel_type_id: 5).where(unit_id: depot).pluck(:id)
        %tr
          %td= check_kin {Unit.find(depot).name}
          %td
            - if @last_prev_depot_fuel4
              - bal_start= @last_prev_depot_fuel4.fuel_balances.where(fuel_tank_id: avtur_tank_ids).first.current
            = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 5).pluck(:quantity).sum(:quantity)
        %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avtur_tank_ids).sum(:current)
        %td=number_with_precision(usage/90, precision: 2) 

  =t 'report.average_avcat_usage'
  %table.table.table-bordered
    %thead
      %tr
        %th Depot
        %th=t 'depot_fuels.bal_start_and_supplied'
        %th=t 'depot_fuels.issued_received'
        %th=t 'depot_fuels.current_stock'
        %th=t 'depot_fuels.usage_average'

    %tbody
      - @daily_usage_quarter4.each do |depot, depot_fuels|
        - depot_fuel_ids=depot_fuels.map(&:id)
        - depot_fuel_last=depot_fuels.last.id
        - avcat_tank_ids=FuelTank.where(fuel_type_id: 12).where(unit_id: depot).pluck(:id)
        - if avcat_tank_ids.count > 0
          %tr
            %td= check_kin {Unit.find(depot).name}
            %td
              - if @last_prev_depot_fuel4
                - bal_start= @last_prev_depot_fuel4.fuel_balances.where(fuel_tank_id: avcat_tank_ids).first.current 
              = bal_start+FuelSupplied.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= usage = FuelIssued.where(depot_fuel_id: depot_fuel_ids).where(fuel_type_id: 12).pluck(:quantity).sum(:quantity)
            %td= FuelBalance.where(depot_fuel_id: depot_fuel_last, fuel_tank_id: avcat_tank_ids).sum(:current)
            %td=number_with_precision(usage/90, precision: 2) 